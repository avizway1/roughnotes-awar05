EC2 : 

1. On-Demand Instances : Unpredictable workloads.. or shortterm testing purpuses..
	--> No Commitment with AWS
	--> Pay-as-you-go Model : Pay for the resources you actually uses
	--> /sec billing (Minimum 60 sec)..

2. Reserved Instances : suitable for "Predictable workloads" for lobger duration (1 Yr - 3 Yrs)

	--> Standard RI : No config changes allowed.
	--> Convertible : Confi changes can be modified (Instance family / OS)

Payment Option:

	--> Full Upfront : Pay 100% upfront.
	--> Partial upfront : Pay 30-50% upfront, Remaining Monthly basis.. With "Redused hourly price".. 
	--> No upfront : Pay entirely on monthly basis.. 

--> We can sell instance in AWS marketplace, if we dont want to use it anymore.

3. Spot Instances : For Flexible workloads with "NO Critical Data".
	--> You bid your price against AWS pricing.
	Usercase : Testing / temporary environments.
	--> High config server, at low cost, with no affect for interruptions.. 

--> if AWS Price exceeds your bidding price, ec2 instance will be terminates.. 

--> Instance termination performed by AWS, Price changed.. You no need to pay for partial hours.. ( 1 hr 50 minutes --> AWS terminated --> 1 Hour)

--> Instance termination performed by User, Price unchanged.. You no need to pay for full hours.. ( 1 hr 50 minutes --> you terminated --> 1 Hour 50 minutes)

---

Step 1 : provide a name (Tag)

Tag --> Combination of key and value pair. We can provide metadata to our instance.

Step 2 : Need to choose AMI (Amazon Machine Image)

OS --> AMI

Step 3 : Instance Type (CPU, Memory)

Application : Demo-app

General Purpose : Balanced Compute, memory, netowking.. : t2, t3, t4g, m4, m5
CPU : CPU-Intensive Tasks : c4, c5
Memory : RAM : memory Optimised : Database, distributed web sale im-memory : r4, r5, x1, z1
Storage : Input and Output Operations per Second : nosql db, datawarehousing : d2, d3, i 
GPU Optimised : Machinelearning, Ai, Gaming.. f1, p , g

Step 4 : Create a keypair and use same.

Helps to get default username and password.

Step 5 : 

OS contains some ports : 

Windows : RDP (Remote Desktop protocol) : 3389 
Linux/unix : SSH (Secure shell) : 22

http : 80
https : 443
mysql : 3306
mssql : 1433
NFS : 2049

Source Type : 
1. Anywhere : 0.0.0.0/0 (Not recommended setting at enterprise level)
2. My IP : Your currently connected network IP address.
3. Custom : We can provide custom network IPs based on or/client requirement.


Step 6 : Storage : 
Windows 30 gb
Linux : 8 / 10 gb


Step 7 : Review and create

-------

How to connect:

Windows OS : 
1. Start --> search "Remote Desktop" --> open
2. Open "run" (windows key + r) --> type "mstsc" --> RDP tool
3. choose the instance "connect" --> RDP client --> Download remote desktop file --> open it

MacOS : navigate to "app store", Install "Microsft remote desktop"

---

Public IP : Unique across the globe : Avinash Reddy Thipparthi
Private IP : Unique with in the network : Chinna

---

telnet --> What is this and how this works.?? How to use this with ec2 instance for testing purpuses.!!

---


Linux : Open-Source System.. 

Sep, 1991 --> Linus Tarvalds

Open Source : Free to use, Modify and distribute.
Security : 
Stable : 
Cost-Effective : 
Performance : 


Linux Distribution:

General : Ubuntu, Fedora, Linux mint
Enterprise Level Server : RHEl (Redhat enterprise linux), SUSE Linux Enterprise Server / SLES, Oracle Linux
Community Server : CentOS, AlmaLinux
Pen Testing: kali linux, parrot OS
Light Weight : Puppy Linux

--

How to launch and Connect to Linux EC2 Instance.

--> AL2023 

EOS : End of Support --> We can still use it, (No updates, no support, no bug fixes)
EOL : End of Life --> We canot use after the give date. 


Default USer name : ec2-user


ssh -i awar-05-fa.pem username@server-ip

ssh -i awar-05-fa.pem ec2-user@13.203.66.42

==> Permisisons are too open.. 

chmod 400 awar-05-fa.pem

--

D: 02/09/2025


--> Create a backup copy of your volume.. 
--> Add addl storage at aws console level
--> Login to OS, "gxfs_rowfs" / "growpart", increase the volume size at OS level
--> Validate the changes.. Sanity Check.. 


1. Pre-Activity Steps : Take backup
2. Actual Activity : 
3. Post Activity steps 


Process to Follow: 

CRQ process : Change Request.. Increase the volume size / Change instance type.. 

CAB Meeting : Change Advisory Board.. 

Present our change.. Once it is approved.. 

--> Does this change require any downtime.? yes
--> Does this change impact customers.? 
--> How critical is this server is.? low, medium, high
--> When you are planning for this change.? Ans : Saturday Early hours.. 
--> What are the teams involved in change implementation.? Linux, AWS, Application Support.. 
--> Who will do the validations after the CRQ Window.? Ans: PS (Production Support).. Dev team.. 


t3.small --> t4g.large ==> 

RCA : Root Cause Analysis : Identifying the root cause of the issue.. 
PIR : Post Incident Report : After the incident is fixed, We prepare a report to take actions.. 
	--> Not to get same issue again.. 
	--> Alerting, is similar issue occurs
	--> Who is responsible to monitor, fix the issue.

---

Snapshot : backup copy of an ebs volume.. 

--> Snapshots are point-in-time copies.

---

Golden AMI : 

10 EC2 Instances 

Moniroting - datadog agent, site24x7 agent
security - prohance, anti virus
Corporate Software - genai, genie..
Dat to day - vim, telnet, pdf viewer, ms office.. 
Standards - OS Hardening, CIS benchmarks.. 


Option 1 : Launch 1 brand new instance at a time.. connect and configure.. Once confidine, go to 2nd instance and perform same.... 10th...

Option 2 : Launch 1 brand new instance first.. connect to it and configure it.. Once configuration completed, Validate it.. Then create it as a Template (Golden-AMI).. Then you can use this teamplete and launch n's ec2 instances..


EC2 --> Connect --> 2 gb vol add, httpd install and create custom webpage, tree package.. user add --> Create an AMI --> 
Launch a new instance from that AMI.. COnnect and verify.. 


/dev/nvme1n1

file -s /dev/nvme1n1

mkfs -t xfs /dev/nvme1n1

mkdir newvol

mount /dev/nvme1n1 newvol/

tail -n 1 /etc/mtab

---

EIP : Elastic IP Address : Gives a Dedicated IP address for our ec2 instance.
--> Default behaviour is "Public IP" will change when we perform stop and start of our ec2 instance.

Dedicated/Static Public IP to our instance using EIP.

AWS cost us for EIP. Attached/unatatched state.. 


13.235.241.174
35.154.250.197

13.202.142.58 - EIP
13.202.142.58

---













